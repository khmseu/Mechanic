/** Declaration file generated by dts-gen */

export const err_argument: string;

export const err_missing: string;

export const err_required: string;

export const err_unknown: string;

export function defaultErrorHandler(err: any): void;

export function getArgumentsWidth_(opts: any): any;

export function getHelpBanner_(opts: any, options: any): any;

export function getHelpOptions_(options: any): any;

export function help(opts: any, options: any): void;

export function parse(opts: any, argv: any, error: any): any;

export function processHelpArgs_(opts: any): any;

export function validateType_(typeFn: any, value: any, replaceFn: any, errorFn: any): void;

export function validateTypes_(opts: any, result: any, err: any): void;

export namespace defaultErrorHandler {
    const prototype: {
    };

}

export namespace getArgumentsWidth_ {
    const prototype: {
    };

}

export namespace getHelpBanner_ {
    const prototype: {
    };

}

export namespace getHelpOptions_ {
    const prototype: {
    };

}

export namespace help {
    const prototype: {
    };

}

export namespace parse {
    const prototype: {
    };

}

export namespace processHelpArgs_ {
    const prototype: {
    };

}

export namespace type {
    function regex(msg: any, regexp: any): any;

    function regexp(msg: any, regexp: any): any;

    namespace file {
        function open(msg: any, options: any): any;

        namespace open {
            const prototype: {
            };

            function read(msg: any, options: any): any;

            function write(msg: any, options: any): any;

            namespace read {
                // Too-deep object hierarchy from options_parser.type.file.open.read
                const prototype: any;

            }

            namespace write {
                // Too-deep object hierarchy from options_parser.type.file.open.write
                const prototype: any;

            }

        }

    }

    namespace regex {
        const prototype: {
        };

    }

    namespace regexp {
        const prototype: {
        };

    }

}

export namespace validateType_ {
    const prototype: {
    };

}

export namespace validateTypes_ {
    const prototype: {
    };

}

